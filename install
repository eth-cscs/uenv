#!/usr/bin/env bash

set -euo pipefail

script_path=$(dirname "$(readlink -f "$BASH_SOURCE")")
version=$(cat "$script_path/VERSION")

# default installation destination, only required for building rpm packages
destdir=""

get_oras_arch() {
  case "$(uname -m)" in
    aarch64)
      echo "arm64"
      ;;
    *)
      echo "amd64"
      ;;
  esac
}

function usage {
    echo "uenv installer"
    echo "Usage: install [--prefix=] [--yes] [--help]"
    echo ""
    echo "--prefix  : the installation path (default /opt/uenv)"
    echo "--local   : install locally for this user (default prefix \$HOME/.local)"
    echo "--yes     : default response to all queries is yes"
    echo "--help    : print this message"
}

function prompt_bash_update {
    prefix=$1
    always_yes=$2

    activate_script=$prefix/bin/activate-uenv

    response="yes"
    if [ "$always_yes" != "yes" ]
    then
        # prompt the user
        echo
        read -p "Do you want to update $HOME/.bashrc to load uenv? [y/N] " response

        # default to No if no input
        response=${response:-N}
    fi

    # check the user's response
    case $response in
        [yY][eE][sS]|[yY])
            # if yes, create the directory
            echo "" >> $HOME/.bashrc
            echo "# configure the user-environment (uenv) utility" >> $HOME/.bashrc
            echo "source ${activate_script}" >> $HOME/.bashrc

            echo
            echo "$HOME/.bashrc has been updated."
            ;;
        *)
            # if anything other than yes, do nothing
            echo
            echo "$HOME/.bashrc is unmodified - you can update it yourself:"
            echo "echo \"source ${activate_script}\" >> $HOME/.bashrc"
            ;;
    esac
}

# set the default installation location
prefix_local="$HOME/.local"
prefix_system="/opt"

# get number of arguments
arg_count=$#

# default is to always query user for yes/no prompts
always_yes=no

# default install system wide
local_install=no

# dry-run (systemwide install only)
uenv_debug=no

# loop over all arguments
for (( i=1; i<=arg_count; i++ ))
do
    arg=${!i}
    case $arg in
        --prefix=*)
        prefix="${arg#*=}"
        ;;
        --local)
        local_install=yes
        ;;
        --yes)
        always_yes=yes
        ;;
        --destdir=*)
        destdir="${arg#*=}"
        ;;
        --debug)
        uenv_debug=yes
        ;;
        --help)
        usage
        exit 0
        ;;
        *)
            echo "Error: unknown argument $arg"
            echo
            usage
            exit 1
            ;;
    esac
done

if [ "$local_install" == "yes" ]
then
    prefix="${prefix:-$prefix_local}"
else
    prefix="${prefix:-$prefix_system}/uenv"
fi

run () {
    if [  "$uenv_debug" = yes ]; then
        printf "%q "  "$@"
        printf "\n"
    else
        "$@"
    fi
}

echo "installing uenv version $version in $prefix from $script_path"
echo "local install: $local_install"

libexec=${prefix}/libexec
impl_path="${libexec}/uenv-impl"
img_impl_path="${libexec}/uenv-image"
lib_path="${libexec}/lib"
if [ "$local_install" == "no" ]
then
    init_path="${destdir}/etc/profile.d/uenv.sh"
else
    init_path="${prefix}/bin/activate-uenv"
fi

echo "installing $lib_path"
run install -v -m755 -d "$lib_path"
run install -v -m644 -D -t "${destdir}/${lib_path}" ${script_path}/lib/alps.py
run install -v -m644 -D -t "${destdir}/${lib_path}" ${script_path}/lib/datastore.py
run install -v -m644 -D -t "${destdir}/${lib_path}" ${script_path}/lib/jfrog.py
run install -v -m644 -D -t "${destdir}/${lib_path}" ${script_path}/lib/names.py
run install -v -m644 -D -t "${destdir}/${lib_path}" ${script_path}/lib/oras.py
run install -v -m644 -D -t "${destdir}/${lib_path}" ${script_path}/lib/record.py
run install -v -m644 -D -t "${destdir}/${lib_path}" ${script_path}/lib/terminal.py

echo "installing ${img_impl_path}"
run install -v -m755 -D "$script_path/uenv-image" "${destdir}/${img_impl_path}"

## ALL GOOD BELOW HERE

echo "installing $impl_path"
run install -D -m755 <(sed "s|@@version@@|$version|g" $script_path/uenv-impl) ${destdir}/$impl_path

# install the oras client
echo "installing oras client"
oras_arch=$(get_oras_arch)
oras_version=1.1.0
oras_file=oras_${oras_version}_linux_${oras_arch}.tar.gz
oras_url=https://github.com/oras-project/oras/releases/download/v${oras_version}/${oras_file}
oras_path=`mktemp -d`
(cd "$oras_path"; run wget --quiet "$oras_url"; run tar -xzf "$oras_file"; run rm *.tar.gz)
oras_exe_path="${libexec}/uenv-oras"
run install -v -m755 -D "${oras_path}/oras" "${destdir}/${oras_exe_path}"

echo "installing $init_path"
run install -v -m644 -D <(
    sed \
        -e "s|@@impl@@|$impl_path|g"  \
        -e "s|@@version@@|$version|g" \
        -e "s|@@prefix@@|$prefix|g"   \
        -e "s|@@image_impl@@|$img_impl_path|g" \
        $script_path/activate) \
      $init_path

if [[ "$local_install" == "yes" ]]; then
    prompt_bash_update "$prefix" "$always_yes"
fi
